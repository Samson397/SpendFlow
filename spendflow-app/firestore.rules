rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only read and write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can only manage their own cards
    match /cards/{cardId} {
      allow read, create, update, delete: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         (request.resource.data.userId == request.auth.uid));
    }
    
    // Users can only manage their own transactions
    match /transactions/{transactionId} {
      allow read, create, update, delete: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         (request.resource.data.userId == request.auth.uid));
    }
    
    // Users can only manage their own expenses
    match /expenses/{expenseId} {
      allow read, create, update, delete: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         (request.resource.data.userId == request.auth.uid));
    }
    
    // Users can only manage their own income
    match /income/{incomeId} {
      allow read, create, update, delete: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         (request.resource.data.userId == request.auth.uid));
    }
    
    // Admin can read all data
    match /{document=**} {
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
